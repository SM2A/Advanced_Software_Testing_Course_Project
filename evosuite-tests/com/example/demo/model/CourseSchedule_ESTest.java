/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 23 20:15:18 GMT 2023
 */

package com.example.demo.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.demo.model.CourseSchedule;
import java.time.DayOfWeek;
import java.time.LocalTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CourseSchedule_ESTest extends CourseSchedule_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = new CourseSchedule.CourseScheduleBuilder();
      DayOfWeek dayOfWeek0 = DayOfWeek.MONDAY;
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder1 = courseSchedule_CourseScheduleBuilder0.dayOfWeek(dayOfWeek0);
      assertSame(courseSchedule_CourseScheduleBuilder1, courseSchedule_CourseScheduleBuilder0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = CourseSchedule.builder();
      String string0 = courseSchedule_CourseScheduleBuilder0.toString();
      assertEquals("CourseSchedule.CourseScheduleBuilder(dayOfWeek=null, startTime=null, endTime=null)", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = CourseSchedule.builder();
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder1 = courseSchedule_CourseScheduleBuilder0.endTime((LocalTime) null);
      assertSame(courseSchedule_CourseScheduleBuilder0, courseSchedule_CourseScheduleBuilder1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = CourseSchedule.builder();
      LocalTime localTime0 = MockLocalTime.now();
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder1 = courseSchedule_CourseScheduleBuilder0.startTime(localTime0);
      assertSame(courseSchedule_CourseScheduleBuilder1, courseSchedule_CourseScheduleBuilder0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = new CourseSchedule.CourseScheduleBuilder();
      CourseSchedule courseSchedule0 = courseSchedule_CourseScheduleBuilder0.build();
      // Undeclared exception!
      try { 
        courseSchedule0.getEndMinute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.demo.model.CourseSchedule", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = new CourseSchedule.CourseScheduleBuilder();
      CourseSchedule courseSchedule0 = courseSchedule_CourseScheduleBuilder0.build();
      // Undeclared exception!
      try { 
        courseSchedule0.getStartMinute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.demo.model.CourseSchedule", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = CourseSchedule.builder();
      CourseSchedule courseSchedule0 = courseSchedule_CourseScheduleBuilder0.build();
      LocalTime localTime0 = MockLocalTime.now();
      courseSchedule0.setStartTime(localTime0);
      assertNull(courseSchedule0.getDayOfWeek());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = CourseSchedule.builder();
      CourseSchedule courseSchedule0 = courseSchedule_CourseScheduleBuilder0.build();
      DayOfWeek dayOfWeek0 = DayOfWeek.WEDNESDAY;
      courseSchedule0.setDayOfWeek(dayOfWeek0);
      assertEquals(DayOfWeek.WEDNESDAY, courseSchedule0.getDayOfWeek());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = CourseSchedule.builder();
      CourseSchedule courseSchedule0 = courseSchedule_CourseScheduleBuilder0.build();
      LocalTime localTime0 = MockLocalTime.now();
      courseSchedule0.setEndTime(localTime0);
      assertNull(courseSchedule0.getDayOfWeek());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = CourseSchedule.builder();
      CourseSchedule courseSchedule0 = courseSchedule_CourseScheduleBuilder0.build();
      // Undeclared exception!
      try { 
        courseSchedule0.getEndHour();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.demo.model.CourseSchedule", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = CourseSchedule.builder();
      CourseSchedule courseSchedule0 = courseSchedule_CourseScheduleBuilder0.build();
      // Undeclared exception!
      try { 
        courseSchedule0.getStartHour();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.demo.model.CourseSchedule", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = new CourseSchedule.CourseScheduleBuilder();
      CourseSchedule courseSchedule0 = courseSchedule_CourseScheduleBuilder0.build();
      LocalTime localTime0 = courseSchedule0.getStartTime();
      assertNull(localTime0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = CourseSchedule.builder();
      CourseSchedule courseSchedule0 = courseSchedule_CourseScheduleBuilder0.build();
      courseSchedule0.getDayOfWeek();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CourseSchedule.CourseScheduleBuilder courseSchedule_CourseScheduleBuilder0 = new CourseSchedule.CourseScheduleBuilder();
      CourseSchedule courseSchedule0 = courseSchedule_CourseScheduleBuilder0.build();
      LocalTime localTime0 = courseSchedule0.getEndTime();
      assertNull(localTime0);
  }
}
